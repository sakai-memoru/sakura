// Unit Test
// + 好きなフォルダ配下
//    + libs
//      + Clipboard3.jse
//    + Clipboard3.qunit
//      + config
//        + setting.js
//      + app.jse
// 
(function(){

// const
var CONS_LIBPATH = '';
var LIBS = [
  ".././lib/Clipboard3.jse",
  "./Config/setting.js",
]

// commonalized for js   /////////////////////////////////////////////
function check_env(){
  // set env_name for targetting wsh, sakura, node
  var env_name = '';
  if (typeof(WScript) !== "undefined") env_name = 'wsh';
  if (typeof(Editor) !== "undefined") env_name = 'sakura';
  if (typeof(alert) !== "undefined") {env_name = 'browser';}
  else if (typeof(console) !== "undefined") env_name = 'node';
  return env_name;
}
var flag = check_env();
var CONFIG = CONFIG || {};
// load external libraries
if(flag == "wsh"||flag == "sakura"){
  var objFS = new ActiveXObject("Scripting.FileSystemObject");
  var lib_path = CONS_LIBPATH ? CONS_LIBPATH: './';
  // require common moduje
  with({
    libs : LIBS, 
    get_moduleCode : function(path){
      return objFS.OpenTextFile(path,1).ReadAll();
    }
  }) {
    for (i in libs){
      try {
        var module_path = objFS.BuildPath(lib_path,libs[i]);
        eval(get_moduleCode(module_path));
      } catch (e) {
        //console.log( e.description || e.message || "error" );
        null;
      }
    }
  };
  objFS = null;
}

var debug_mode = CONFIG.DEBUG_MODE;

// pretend console.log 
var console = console || {};
if(console){
  if(debug_mode){
    if(flag == "sakura"){
      console.log=function(str){
        var log_str = "[DEBUG] $d$t ($f) > " + str;
        Editor.TraceOut(log_str,1)
      }
      console.info=function(str){
        var log_str = "[INFO] $d$t ($f) > " + str;
        Editor.TraceOut(log_str,1)
      }
    };
    if(flag == "wsh"){
      console.info = function(str){WScript.Echo('[INFO] ' + str)};
      console.log = function(str){WScript.Echo('[DEBUG] ' + str)};
    }
  }else{
    if(flag == "wsh")  console.info = function(str){WScript.Echo(str)};
    if(flag == "sakura")  console.info =function(str){Editor.InfoMsg(str)};
    if(flag == "wsh")  console.log = function(str){null;};
    if(flag == "sakura")  console.log = function(str){null;};
  }
}
// pretend process.exit
if(typeof(process) === "undefined"){
  if(flag == "wsh")  process={exit : function(e){WScript.Quit(e)}};
  if(debug_mode){
    if(flag == "sakura")  process={exit : function(e){Editor.TraceOut('done')}};
  }else{
    if(flag == "sakura")  process={exit : function(e){'done'}};
  }
}

// local functions
// 
null;

// do process 
function doProcess(){

  // move cursor to file end
  var CLIP = exports.CLIP;
  var str = 'test for clipboard3 ....';
  CLIP.set_clipboard(str);
  var str_get = CLIP.get_clipboard();
  console.log('str_get = ' + str_get);
  
}

// ------------------------------------------------ entry point
// 
if(typeof(Editor) !== 'undefined'){
  process.exit(doProcess());
  
} else {
  if(typeof(WScript) !== 'undefined'){
    process.exit(doProcess());
  } else {
    console.log('[Warn] This script is for sakura macro. A env is maybe node.'); // FIXME
  }
}

}())
